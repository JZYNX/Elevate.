const { default: mongoose } = require('mongoose')
const User = require('../models/userModel')
const Post = require('../models/postModel')

// get all
const getAllUsers = async (req, res) => {
    const users = await User.find({})

    return res.status(200).json(users)
}

// get one
const getOneUser = async (req, res) => {
    const {id} = req.params

    if (!mongoose.Types.ObjectId.isValid(id)) {
        return res.status(404).json({error: "Invalid id, needs to be mongo ID"})
    }

    const user = await User.findById(id)

    if (!user) {
        return res.status(404).json({error: "No such user"})
    }

    return res.status(200).json(user)
}

// POST new user
const createUser = async (req, res) => {
    const {username, password, email} = req.body

    try {
        const user = await User.create({username, password, email})
        res.status(200).json(user)
    } catch (err) {
        res.status(400).json({error: err.message})
    }
}

// UPDATE a user
// const updateUser = async (req, res) => {
//     const {id} = req.params

//     if (!mongoose.Types.ObjectId.isValid(id)) {
//         return res.status(404).json({error: "Invalid id, needs to be mongo ID"})
//     }

//     const user = await User.findOneAndUpdate({_id: id}, {
//         ...req.body
//     })

//     if (!user) {
//         return res.status(404).json({error: "No such user"})
//     }

//     return res.status(200).json(user)
// }


const postImage =  async (req, res) => {
    const body = req.body;
    const {myFile} = req.body;
    if (myFile == null || myFile == "") {
        console.log(myFile)
        return res.status(400).json({msg: "no image uploaded"})
    }
    try{
        const newImage = await Post.create(body)
        newImage.save();
        res.status(201).json({ msg : "New image uploaded...!"})
    }catch(error){
        res.status(409).json({ message : error.message })
    }
}

const updateUser = async (req, res) => {
    const { username } = req.body; // Assuming the username is sent in the request body
    const updatedUserData = req.body;
  
    try {
      // Find the user based on the username
      const updatedUser = await User.findOneAndUpdate(
        { username }, // Query to find the user by username
        { $set: updatedUserData }, // Update the user's data with the provided data
        { new: true } // Return the updated user
      );
  
      if (!updatedUser) {
        return res.status(404).json({ error: 'User not found' });
      }
  
      return res.status(200).json(updatedUser);
    } catch (error) {
      console.error('Error updating user:', error);
      return res.status(500).json({ error: 'Internal server error' });
    }
  };



module.exports = {
    createUser,
    getAllUsers,
    getOneUser,
    updateUser,
    postImage
}